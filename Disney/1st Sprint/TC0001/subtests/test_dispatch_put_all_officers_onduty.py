from selenium.webdriver.common.by import By
from src.testproject.decorator import report_assertion_errors


"""
This pytest test was automatically generated by TestProject
    Project: Hans' Project
    Package: TestProject.Generated.Tests.HansProject
    Test: Dispatch - Put all Officers OnDuty
    Generated by: Hans Hwang (hhwang@d3security.com)
    Generated on 10/02/2021, 00:09:41
"""


@report_assertion_errors
def test_main(driver):
    """Dispatch Operations Center."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://gsstage.d3securityonline.com/QA/VSOC/Login.aspx"
    DispatchIDtype = ""
    DispatchID = ""

    # 1. Click 'Schedule'
    # Step switches frame driver context.
    driver.switch_to.default_content()
    driver.switch_to.frame(
        driver.find_element(By.XPATH,
                            "//*[@id = 'FrameOnLifeServer']|//*[@name = 'FrameOnLifeServer']|/html/body/form/iframe"))
    schedule = driver.find_element(By.XPATH,
                                   "//a[. = 'Schedule']")
    schedule.click()

    # 2. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 3. Is 'Date and Shift' visible?
    date_and_shift = driver.find_element(By.CSS_SELECTOR,
                                         "#lbDateRange")
    assert date_and_shift.is_displayed()

    # 4. Is 'Off-Duty Officers (0)' visible?
    off_duty_officers_0_ = driver.find_element(By.XPATH,
                                               "//div[3]/div/div[3]/div/span[1]")
    assert off_duty_officers_0_.is_displayed()

    # 5. Click 'cb_OffDutyOfficerList'
    cb_offdutyofficerlist = driver.find_element(By.CSS_SELECTOR,
                                                "#cb_OffDutyOfficerList")
    cb_offdutyofficerlist.click()

    # 6. Click 'On Duty'
    on_duty = driver.find_element(By.CSS_SELECTOR,
                                  "#btnUp")
    on_duty.click()

    # 7. Close window with index '2'
    driver.close()

    # 8. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])
